{
  "hash": "3f0f34726245133979085bb544073de8",
  "result": {
    "markdown": "---\ntitle: \"R102 Workshop Analysis\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# API tokens stored in .Renviron https://cran.r-project.org/web/packages/httr/vignettes/secrets.html#environment-variables\n\n# pull data from redcap\nr102_formData <- list(\"token\"=Sys.getenv(\"R102_registration_65259\"),\n                          content='record',\n                          action='export',\n                          format='csv',\n                          type='flat',\n                          csvDelimiter='',\n                          rawOrLabel='raw',\n                          rawOrLabelHeaders='raw',\n                          exportCheckboxLabel='false',\n                          exportSurveyFields='true',\n                          exportDataAccessGroups='false',\n                          returnFormat='json'\n)\nr102_response <- httr::POST(\"https://redcap.chop.edu/api/\", body = r102_formData, encode = \"form\")\nr102_raw <- httr::content(r102_response, show_col_types = FALSE) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nr102 <- r102_raw |> \n  # force all email to lowercase\n  dplyr::mutate(email = tolower(email)) |> \n  # identify people who registered more than once with the same email\n  dplyr::add_count(email) |> \n  # extract organization from email address\n  tidyr::extract(email, into = \"org\", \n                 regex = \"[^@]+@(.*)[.]edu\", \n                 remove = FALSE) |> \n  # clean up org categories\n  dplyr::mutate(org = dplyr::case_when(grepl(x=org, pattern = \"chop\") ~ \"CHOP\",\n                                       grepl(x=org, pattern = \"upenn\") ~ \"Penn\",\n                                       TRUE ~ \"Other\"),\n                org = as.factor(org)) |> \n  # clean up dates\n    dplyr::mutate(signup_date = lubridate::ymd_hms(form_1_timestamp),\n                mar_followup_date = lubridate::ymd_hms(missing_values_in_r_follow_up_timestamp),\n                apr_followup_date = lubridate::ymd_hms(summary_stats_in_r_follow_up_timestamp),\n                may_followup_date = lubridate::ymd_hms(reshaping_data_in_tidyr_follow_up_timestamp),\n                jun_followup_date = lubridate::ymd_hms(data_types_and_viz_follow_up_timestamp))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 6 failed to parse.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 failed to parse.\n```\n:::\n\n```{.r .cell-code}\nplot_data <- r102 |> \n  dplyr::select(record_id, missing_values_1 = missing_values, \n                create_table_1 = create_table,\n                tidyr_1 = tidyr,\n                data_types_1 = data_types,\n                ggplot2_1 = ggplot2, \n                tidyselect::ends_with(\"_2\")) |> \n  tidyr::pivot_longer(-record_id, values_to = \"ability\") |> \n  tidyr::extract(name, into=c(\"topic\", \"event\"), regex=\"(.*)_([12])\") |> \n  dplyr::mutate(event = factor(event, levels = 1:2, labels = c(\"pre\", \"post\"))) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nability_plot <- function(df){\n  base_plot <- df |> \n  dplyr::filter(event %in% c(\"pre\", \"post\")) |> \n  ggplot(aes(y=ability)) + \n  geom_bar() +\n  # geom_histogram(bins = 6) + \n  facet_wrap(~event) +\n  scale_y_continuous(breaks = 1:4, limits = c(.5,4.5),\n                     labels = c(\"(1) I wouldn't know where to start\",\n                                \"(2) I could struggle through,\\nbut not confident I could do it\",\n                                \"(3) I could probably do it\\nwith some trial and error\",\n                                \"(4) I am confident in my ability to do it\")) + \n    theme_classic() + \n    labs(x=NULL, y=NULL) + \n   theme(\n    strip.text = element_text(face = \"bold\"),\n    strip.background = element_rect(colour = \"black\", size = 1))\n  \n  return(base_plot)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint_p <- function(p, digits = 3, eval=TRUE){\n  if(eval){\n    if (p < .001){\n    p_statement <- \"p < .001\"\n  } else {\n    format <- paste0(\"%0.\", digits, \"f\")\n    p_statement <- paste0(\"p = \", sub(pattern = \"^0\", replacement = \"\", x=sprintf(format, p)))\n  }\n  }\n}\n\nprint_lm <- function(model, digits = 2, digits_p = 3, eval=TRUE){\n  if(eval){\n    format <- paste0(\"%0.\", digits, \"f\")\n  \n  rsq <- summary(model)$r.squared\n  f <- summary(model)$fstatistic[\"value\"]\n  df1 <- summary(model)$fstatistic[\"numdf\"]\n  df2 <- summary(model)$fstatistic[\"dendf\"]\n  p <- pf(f,df1,df2, lower.tail = FALSE)\n  paste0(\"RÂ² = \", print_r(rsq, digits), \", F(\", df1, \", \", df2, \") = \", sprintf(format, f), \", \", print_p(p, digits_p))\n  }\n}\n\nprint_t <- function(ttest, digits = 2, digits_p = 3, eval=TRUE){\n  if(eval){\n    format <- paste0(\"%0.\", digits, \"f\")\n  \n  paste0(\"t(\", ttest$parameter, \") = \", sprintf(format, ttest$statistic), \", \", print_p(ttest$p.value, digits_p) )\n  }\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neval_mar = sum(r102$missing_values_in_r_follow_up_complete == 2) > 0\neval_apr = sum(r102$summary_stats_in_r_follow_up_complete == 2) > 0\neval_may = sum(r102$reshaping_data_in_tidyr_follow_up_complete == 2) > 0\neval_jun = sum(r102$data_types_and_viz_follow_up_complete == 2) > 0\n```\n:::\n\n\n\n## Missing Values in R\n\n152 signups. \n\n47 responses on post-workshop survey.\n\nAll available responses at pre and post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- plot_data |> \n  dplyr::filter(topic == \"missing_values\") |> \n  ability_plot() +\n  labs(title = \"How comfortable are you with identifying\\nand working with missing values in R?\")\n\nggsave(\"prepost_03_all.png\", \n       plot = p,\n       height = 4, width = 7, units = \"in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 256 rows containing non-finite values (stat_count).\n```\n:::\n:::\n\n\n![](prepost_03_all.png)\n\nJust folks who did respond at post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- plot_data |> \n  dplyr::filter(topic == \"missing_values\") |> \n  # remove folks who are NA for either pre or post\n  tidyr::pivot_wider(names_from = event, values_from = ability) |> \n  na.omit() |> \n  # pivot back to long for plotting\n  tidyr::pivot_longer(pre:post, names_to = \"event\", values_to = \"ability\") |> \n  dplyr::mutate(event = factor(event, levels = c(\"pre\", \"post\"))) |> \n  ability_plot() +\n  labs(title = \"How comfortable are you with identifying\\nand working with missing values in R?\", \n       subtitle = \"Only participants who responded at pre and post\")\n\nggsave(\"prepost_03_completers.png\", \n       plot = p,\n       height = 4, width = 7, units = \"in\")\n```\n:::\n\n\n![](prepost_03_completers.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmar_test <- t.test(r102$missing_values_2, r102$missing_values, paired = TRUE)\n```\n:::\n\n\nWe saw significant improvement from pre to post after the Missing Values in R session, with respondents reporting higher ability afterward, t(40) = 5.31, p < .001.\n\n## Summary Stats\n\n205 signups. \n\n0 responses on post-workshop survey.\n\nAll available responses at pre and post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data |> \n  dplyr::filter(topic == \"create_table\") |> \n  ability_plot() +\n  labs(title = \"How comfortable are you creating a\\npublication-ready table of descriptive statistics in R?\")\n```\n:::\n\n\nJust folks who did respond at post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data |> \n  dplyr::filter(topic == \"create_table\") |> \n  # remove folks who are NA for either pre or post\n  tidyr::pivot_wider(names_from = event, values_from = ability) |> \n  na.omit() |> \n  # pivot back to long for plotting\n  tidyr::pivot_longer(pre:post, names_to = \"event\", values_to = \"ability\") |> \n  dplyr::mutate(event = factor(event, levels = c(\"pre\", \"post\"))) |> \n  ability_plot() +\n  labs(title = \"How comfortable are you creating a\\npublication-ready table of descriptive statistics in R?\", \n       subtitle = \"Only participants who responded at pre and post\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\napr_test <- t.test(r102$create_table_2, r102$create_table, paired = TRUE)\n```\n:::\n\n\nWe saw significant improvement from pre to post after the Summary Statistics in R session, with respondents reporting higher ability afterward, .\n\n## Tidyr\n\n183 signups. \n\n0 responses on post-workshop survey.\n\nAll available responses at pre and post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data |> \n  dplyr::filter(topic == \"tidyr\") |> \n  ability_plot() +\n  labs(title = \"How comfortable are you reshaping data\\nwith the tidyr package in R?\")\n```\n:::\n\n\nJust folks who did respond at post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data |> \n  dplyr::filter(topic == \"tidyr\") |> \n  # remove folks who are NA for either pre or post\n  tidyr::pivot_wider(names_from = event, values_from = ability) |> \n  na.omit() |> \n  # pivot back to long for plotting\n  tidyr::pivot_longer(pre:post, names_to = \"event\", values_to = \"ability\") |> \n  dplyr::mutate(event = factor(event, levels = c(\"pre\", \"post\"))) |> \n  ability_plot() +\n  labs(title = \"How comfortable are you reshaping data\\nwith the tidyr package in R?\", \n       subtitle = \"Only participants who responded at pre and post\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmay_test <- t.test(r102$tidyr_2, r102$tidyr, paired = TRUE)\n```\n:::\n\n\nWe saw significant improvement from pre to post after the Reshaping Data with tidyr session, with respondents reporting higher ability afterward, .\n\n## Data types and viz\n\n190 signups. \n\n0 responses on post-workshop survey.\n\nAll available responses at pre and post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data |> \n  dplyr::filter(topic == \"data_types\") |> \n  ability_plot() +\n  labs(title = \"How comfortable are you identifying and\\nmanipulating different data types in R?\")\n\nplot_data |> \n  dplyr::filter(topic == \"ggplot2\") |> \n  ability_plot() +\n  labs(title = \"How comfortable are you creating\\ndata visualizations in R with ggplot2?\")\n```\n:::\n\n\nJust folks who did respond at post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data |> \n  dplyr::filter(topic == \"data_types\") |> \n  # remove folks who are NA for either pre or post\n  tidyr::pivot_wider(names_from = event, values_from = ability) |> \n  na.omit() |> \n  # pivot back to long for plotting\n  tidyr::pivot_longer(pre:post, names_to = \"event\", values_to = \"ability\") |> \n  dplyr::mutate(event = factor(event, levels = c(\"pre\", \"post\"))) |> \n  ability_plot() +\n  labs(title = \"How comfortable are you identifying and\\nmanipulating different data types in R?\", \n       subtitle = \"Only participants who responded at pre and post\")\n\nplot_data |> \n  dplyr::filter(topic == \"ggplot2\") |> \n  # remove folks who are NA for either pre or post\n  tidyr::pivot_wider(names_from = event, values_from = ability) |> \n  na.omit() |> \n  # pivot back to long for plotting\n  tidyr::pivot_longer(pre:post, names_to = \"event\", values_to = \"ability\") |> \n  dplyr::mutate(event = factor(event, levels = c(\"pre\", \"post\"))) |> \n  ability_plot() +\n  labs(title = \"How comfortable are you creating\\ndata visualizations in R with ggplot2?\", \n       subtitle = \"Only participants who responded at pre and post\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_test <- t.test(r102$data_types_2, r102$data_types, paired = TRUE)\nggplot_test <- t.test(r102$ggplot2_2, r102$ggplot2, paired = TRUE)\n```\n:::\n\n\nWe saw significant improvement from pre to post after the Data Types and Visualizations in R session, with respondents reporting higher ability afterward, in both data types  and visualizations .\n\n",
    "supporting": [
      "analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}